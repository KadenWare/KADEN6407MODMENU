-- LOCALS
 -- MAIN LOCAL
 local ParkerStyle = game.ReplicatedStorage.Styles.Rush
 local ParkerStyleName = game.ReplicatedStorage.Styles.Rush.VisualName
 local ParkerStyleColor = game.ReplicatedStorage.Styles.Rush.Color
 -- Parker Style Configurations
 ParkerStyleName.Value = "Parker"
  
-- Parker Moveset
 
  -- Parker Rushes
 ParkerStyle.Rush1.Value = "RPunch1"
 ParkerStyle.Rush2.Value = "RPunch3"
 ParkerStyle.Rush3.Value = "RPunch2"
 ParkerStyle.Rush4.Value = "RPunch2"
 ParkerStyle.Rush5.Value = "RPunch5"
 ParkerStyle.Rush6.Value = "RPunch6"
 ParkerStyle.Rush7.Value = "RPunch7"
  -- Parker Strikes
 ParkerStyle.Strike1.Value = "ParkerDrop"
 ParkerStyle.Strike2.Value = "BStrike2"
 ParkerStyle.Strike3.Value = "BStrike3"
 ParkerStyle.Strike4.Value = "BStrike4"
 ParkerStyle.Strike5.Value = "BStrike5"
 
 -- Aura color 
 ParkerStyleColor.Value = Color3.fromRGB(85,255,0)
 function UseHeatAction(HeatAction, Style, Bots)
     -- Script generated by SimpleSpy - credits to exx#9394
 
     local args = {
         [1] = {
             [1] = "heatmove",
             [2] = game:GetService("ReplicatedStorage").Moves[HeatAction],
             [3] = {
 
             },
             [4] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,
             [5] = Style
         }
     }
 
     for i,v in pairs(Bots) do
         table.insert(args[1][3], {
             [1] = v,
             [2] = 10.49982091806829,
             [3] = false,
             [4] = Vector3.new(0.854888916015625, -0.499908447265625, -3.08367919921875)
         })
     end
 
     game:GetService("ReplicatedStorage").Events.ME:FireServer(unpack(args))
 end
 
 local styles = game.ReplicatedStorage.Styles
 local plr = game.Players.LocalPlayer
 local status = plr.Status
 
 function isInBattle()
     return (plr:FindFirstChild("InBattle") and true or false)
 end
 
 function isDungeon()
     return game.ReplicatedStorage.Dungeon.Value
 end
 
 function doingHact()
     return (plr.Character:FindFirstChild("Heated") and true or false)
 end
 
 function showMaxHeatEffect()
     return (isInBattle() and not doingHact() and plr.Status.Heat.Value >= 100) and true or false
 end
 
 function hasWeaponInHand()
     return (plr.Character:FindFirstChild("Holding") and true or false)
 end
 
 local function change_color()
     if status.Style.Value == "Rush" then
         local DragonSequence = ColorSequence.new{ColorSequenceKeypoint.new(0, styles.Rush.Color.Value), ColorSequenceKeypoint.new(1, styles.Rush.Color.Value)}
         local char = plr.Character
         char.HumanoidRootPart.Fire_Main.Color = DragonSequence
         char.HumanoidRootPart.Fire_Secondary.Color = DragonSequence
         char.HumanoidRootPart.Fire_Main.Rate = status.Heat.Value >= 100 and 115 or status.Heat.Value >= 75 and 85 or 80
         char.HumanoidRootPart.Fire_Secondary.Rate = status.Heat.Value >= 100 and 90 or status.Heat.Value >= 75 and 80 or 70
         char.HumanoidRootPart.Lines1.Color = DragonSequence
         char.HumanoidRootPart.Lines1.Rate = status.Heat.Value >= 100 and 60 or status.Heat.Value >= 75 and 40 or 20
         char.HumanoidRootPart.Lines2.Color = DragonSequence
         char.HumanoidRootPart.Lines2.Rate = status.Heat.Value >= 100 and 60 or status.Heat.Value >= 20 and 40 or 20
         char.HumanoidRootPart.Sparks.Color = DragonSequence
         if not char.HumanoidRootPart.TimeFor.Enabled then
             char.HumanoidRootPart.TimeFor.Color = DragonSequence
         end
 
         char.UpperTorso["r2f_aura_burst"].Lines1.Color = DragonSequence
         char.UpperTorso["r2f_aura_burst"].Lines2.Color = DragonSequence
         char.UpperTorso["r2f_aura_burst"].Flare.Color = DragonSequence
         char.UpperTorso["r2f_aura_burst"].Lines1.Enabled = showMaxHeatEffect()
         char.UpperTorso["r2f_aura_burst"].Flare.Enabled = showMaxHeatEffect()
         char.UpperTorso["r2f_aura_burst"].Smoke.Color = DragonSequence
         char.UpperTorso.Evading.Color = DragonSequence
     end
 end
 
 local function FillHeat()
     local Event = game:GetService("ReplicatedStorage").Events.ME
 
     for i=1,6 do
         local A_1 =  {
             [1] = "heat", 
             [2] = game:GetService("ReplicatedStorage").Moves.Taunt
         }
         Event:FireServer(A_1)
     end
 end
 
 game:GetService("RunService").RenderStepped:Connect(change_color)
 
 plr.Character.ChildAdded:Connect(function(v)
     if v.Name == 'Grabbing' then
         while v.Parent == plr.Character do
             if status.Heat.Value ~= 100 then
                 FillHeat()
             end
             task.wait(0.1)
         end
     end
 end)
 
 local ts = game:GetService("TweenService")
 local ti = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
 
 local function remove_brighness(color)
     local h,s,v = color:ToHSV()
     return Color3.fromHSV(h, s, 1)
 end
 
 game.Players.LocalPlayer.Character.DescendantAdded:Connect(function(v)
     if v.ClassName:find("Trail") then
         local highlight = Instance.new("Highlight", game.Players.LocalPlayer.Character.RightHand)
         local fadeout = ts:Create(highlight, ti, {FillTransparency = 1})
 
         local style = game.Players.LocalPlayer.Status.Style.Value
         local style_obj = game.ReplicatedStorage.Styles:FindFirstChild(style)
         local color = style_obj.Color
 
         highlight.FillColor = color.Value
 
         highlight.Adornee = v.Parent
         highlight.OutlineTransparency = 1
         highlight.FillTransparency = 1
 
         ts:Create(highlight, ti, {FillTransparency = 0.2}):Play()
 
 
         fadeout.Completed:Once(function()
             highlight:Destroy()
         end)
 
         v.Destroying:Once(function()
             fadeout:Play()
         end)
     end
 end)
 
